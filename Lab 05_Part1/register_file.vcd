$date
	Wed Oct 21 09:50:46 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Testbench $end
$var wire 8 ! OUT2 [7:0] $end
$var wire 8 " OUT1 [7:0] $end
$var reg 1 # CLK $end
$var reg 8 $ IN [7:0] $end
$var reg 3 % INADDRESS [2:0] $end
$var reg 3 & OUT1ADDRESS [2:0] $end
$var reg 3 ' OUT2ADDRESS [2:0] $end
$var reg 1 ( RESET $end
$var reg 1 ) WRITE $end
$scope module reg_f $end
$var wire 1 # CLK $end
$var wire 8 * IN [7:0] $end
$var wire 3 + INADDRESS [2:0] $end
$var wire 3 , OUT1ADDRESS [2:0] $end
$var wire 3 - OUT2ADDRESS [2:0] $end
$var wire 1 ( RESET $end
$var wire 1 ) WRITE $end
$var reg 8 . OUT1 [7:0] $end
$var reg 8 / OUT2 [7:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
x(
bx '
bx &
bx %
bx $
x#
bx "
bx !
$end
#5
1#
0(
#10
b0 %
b0 +
b1010 $
b1010 *
1#
1)
#15
b1 %
b1 +
b10100 $
b10100 *
1#
#20
b10 %
b10 +
b11110 $
b11110 *
1#
#25
b11 %
b11 +
b101000 $
b101000 *
1#
#30
b100 %
b100 +
b110010 $
b110010 *
1#
#35
b101 %
b101 +
b111100 $
b111100 *
1#
#40
b110 %
b110 +
b1000110 $
b1000110 *
1#
#45
b111 %
b111 +
b1010000 $
b1010000 *
1#
#50
b1 '
b1 -
b0 &
b0 ,
0)
#52
b10100 !
b10100 /
b1010 "
b1010 .
#55
b11 '
b11 -
b10 &
b10 ,
#57
b101000 !
b101000 /
b11110 "
b11110 .
#60
b101 '
b101 -
b100 &
b100 ,
#62
b111100 !
b111100 /
b110010 "
b110010 .
#65
b111 '
b111 -
b110 &
b110 ,
#67
b1010000 !
b1010000 /
b1000110 "
b1000110 .
#70
b1000 0
1#
1(
1)
#75
b1 '
b1 -
b0 &
b0 ,
0)
0(
#77
b0 !
b0 /
b0 "
b0 .
